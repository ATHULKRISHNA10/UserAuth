openapi: 3.0.0
info:
  title: User Authentication API
  version: 1.0.0
  description: API documentation for the User Authentication Service
servers:
  - url: http://localhost:5000
    description: Development server
components:
  schemas:
    User:
      type: object
      required:
        - name
        - email
        - password
      properties:
        id:
          type: string
          description: The auto-generated id of the user
        name:
          type: string
          description: The name of the user
        email:
          type: string
          description: The email of the user
        password:
          type: string
          description: The password of the user
      example:
        id: 66616a741b018ec6471d17d4
        name: User
        email: user@example.com
        password: password123
securitySchemes:
  bearerAuth:
    type: http
    scheme: bearer
    bearerFormat: JWT
tags:
  - name: Auth
    description: The Authentication managing API
paths:
  /api/auth/register:
    post:
      summary: Register a new user
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: The user was successfully registered
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: The JWT token
        '400':
          description: User already exists or bad request
        '500':
          description: Internal server error
  /api/auth/login:
    post:
      summary: Login an existing user
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: The email of the user
                password:
                  type: string
                  description: The password of the user
              example:
                email: user@example.com
                password: password123
      responses:
        '200':
          description: The user successfully logged in
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: The JWT token
        '400':
          description: Invalid credentials or bad request
        '500':
          description: Internal server error
  /api/protected:
    get:
      summary: Access a protected route
      tags: [Auth]
      security:
        - bearerAuth: []
      parameters:
        - in: header
          name: x-auth-token
          required: true
          schema:
            type: string
          description: The JWT token for authentication
      responses:
        '200':
          description: Access granted
        '401':
          description: Unauthorized
        '500':
          description: Internal server error